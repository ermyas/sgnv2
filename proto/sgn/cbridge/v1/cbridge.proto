syntax = "proto3";
package sgn.cbridge.v1;

import "gogoproto/gogo.proto";

option go_package = "github.com/celer-network/sgn-v2/x/cbridge/types";

message Params {
  MultiChainAssetParam multi_chain_asset_param = 1[(gogoproto.nullable) = false];
}

message MultiChainAssetParam {
  repeated ChainAsset chain_asset = 1 [(gogoproto.nullable) = false];
}

message ChainAsset {
  uint64 chain_id = 1;
  string token_symbol = 2;
  string token_addr = 3;
  uint64 decimal = 4;
  string max_fee_amount = 5; // max fee, use string to avoid uint64 now enough for 18 decimal tokens
}

// to be included in sync propose update, broadcast by syncer to tell others
// an onchain event happened. for completeness we include chainid, even though
// propose update also has it
message OnChainEvent {
  uint64 chainid = 1;
  string evtype = 2; // see cbr_monitor.go for const strings
  bytes elog = 3; // serialized json string, use bytes for easier marshal/unmarshal
}

// to be included in sync propose updates, details TBD
message Withdraw {

}

// same proto used by solidity, serialized bytes are signed by sgn nodes then submit onchain to relay function
// x/cbridge will emit tendermint event, relayer monitor and send msg w/ its signature
message RelayOnChain {
  bytes sender = 1;
  bytes receiver = 2;
  bytes token = 3;
  bytes amount = 4;
  uint64 src_chain_id = 5;
  uint64 dst_chain_id = 6;
  uint64 nonce = 7;
  bytes src_transfer_id = 8;
}
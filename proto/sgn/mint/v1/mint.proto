syntax = "proto3";
package sgn.mint.v1;

option go_package = "github.com/celer-network/sgn-v2/x/mint/types";

import "gogoproto/gogo.proto";

// Minter represents the minting state.
message Minter {
  // current annual provisions
  string annual_provisions = 1 [
    (gogoproto.moretags) = "yaml:\"annual_provisions\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

// Params holds parameters for the mint module.
message Params {
  option (gogoproto.goproto_stringer) = false;

  // type of coin to mint
  string mint_denom = 1;
  // expected blocks per year
  uint64 blocks_per_year = 2 [(gogoproto.moretags) = "yaml:\"blocks_per_year\""];
}

// AdjustProvisionsProposal details a proposal to adjust the annual provisions of the stake token
message AdjustProvisionsProposal {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  string title = 1 [(gogoproto.moretags) = "yaml:\"title\""];
  string description = 2 [(gogoproto.moretags) = "yaml:\"description\""];
  string new_annual_provisions = 3 [
    (gogoproto.moretags) = "yaml:\"new_annual_provisions\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

// AdjustProvisionsProposalWithDeposit defines an AdjustProvisionsProposal with a deposit, for CLI usage.
message AdjustProvisionsProposalWithDeposit {
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = true;

  string title = 1 [(gogoproto.moretags) = "yaml:\"title\""];
  string description = 2 [(gogoproto.moretags) = "yaml:\"description\""];
  string new_annual_provisions = 3 [
    (gogoproto.moretags) = "yaml:\"new_annual_provisions\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string deposit = 4 [(gogoproto.moretags) = "yaml:\"deposit\""];
}

syntax = "proto3";
package sgn.explorer.v1;

option go_package = "github.com/celer-network/sgn-v2/explorer";

service Explorer {
  rpc GetTotalStats (GetTotalStatsRequest) returns (GetTotalStatsResponse);
  rpc GetDailyTotalLiquidity (GetDailyTotalLiquidityRequest) returns (GetDailyTotalLiquidityResponse);
  rpc GetDailyTransactionCount (GetDailyTransactionCountRequest) returns (GetDailyTransactionCountResponse);
  rpc GetDailyTransactionVolume (GetDailyTransactionVolumeRequest) returns (GetDailyTransactionVolumeResponse);
}

message GetTotalStatsRequest {
}

message GetTotalStatsResponse {
  ErrMsg err = 1;
  double total_transaction_volume = 2;
  uint64 total_transaction_count = 3;
  double last_24_total_transaction_volume = 4;
  uint64 last_24_total_transaction_count = 5;
  double total_liquidity = 6;
  uint64 unique_address = 7;
}

message GetDailyTotalLiquidityRequest{
  uint64 begin = 1; // in milliseconds
  uint64 end = 2; // in milliseconds
}

message GetDailyTotalLiquidityResponse {
  ErrMsg err = 1;
  repeated DailyTotalLiquidity daily_liquidity = 2;
}

message DailyTotalLiquidity {
  uint64 time = 1;
  double total_liquidity = 2;
}

message GetDailyTransactionCountRequest {
  uint64 begin = 1; // in milliseconds
  uint64 end = 2; // in milliseconds
}

message GetDailyTransactionCountResponse {
  ErrMsg err = 1;
  repeated DailyTransactionCount daily_transaction_count = 2;
}

message DailyTransactionCount {
  uint64 time = 1; // in milliseconds
  uint64 transaction_count = 2;
}

message GetDailyTransactionVolumeRequest {
  uint64 begin = 1; // in milliseconds
  uint64 end = 2; // in milliseconds
}

message GetDailyTransactionVolumeResponse {
  ErrMsg err = 1;
  repeated DailyTransactionVolume daily_transaction_volume = 2;
}

message DailyTransactionVolume {
  uint64 time = 1; // in milliseconds
  double daily_transaction_volume = 2;
}

message ErrMsg {
  ErrCode code = 1;
  string msg = 2;
}

enum ErrCode {
  ERROR_CODE_UNDEFINED = 0;
  ERROR_CODE_INVALID_TIME_PARAM = 1;
}
syntax = "proto3";
package sgn.health.v1;

option go_package = "github.com/celer-network/sgn-v2/relayer";

message ReportCurrentBlockNumberRequest {
  // serialized CurrentBlockNumberReport
  bytes report = 1;
  bytes sig = 2;
}

message CurrentBlockNumberReport {
  // in millis
  uint64 timestamp = 1;
  // key is chainId, value is block number
  map<string, uint64> block_nums = 2;
  string sgnd_version = 3;
}

message ReportCurrentBlockNumberResponse {
  ErrMsg err = 1;
}

message ReportSgnAnalyticsRequest {
  // serialized SgnAnalyticsReport
  bytes report = 1;
  bytes sig = 2;
}

message SgnAnalyticsReport {
  // in millis
  uint64 timestamp = 1;
  // key is chainId, value is current block number
  map<string, uint64> block_nums = 2;
  string sgnd_version = 3;
  // key is nanoseconds timestamp, so histories are group by transfer (lp picks belong to one transfer are the same time)
  map<uint64, LPFeeEarningHistory> lp_fee_earning_histories = 4;
}

// each LPFeeEarningHistory represents one transfer history
message LPFeeEarningHistory {
  // 0x
  string dst_token_addr = 1;
  uint64 dst_chain_id = 2;
  // key is lp_addr (0x)
  map<string, LPFeeEarningLog> logs = 3;
}

message LPFeeEarningLog {
  string dst_chain_liquidity_used = 1;
  string earned_fee = 2;
  string dst_chain_liquidity_remained = 3;
}

message ReportSgnAnalyticsResponse {
  ErrMsg err = 1;
}

message ErrMsg {
  ErrCode code = 1;
  string msg = 2;
}

enum ErrCode {
  ERROR_CODE_UNDEFINED = 0;
  ERROR_CODE_COMMON = 500;
  ERROR_NO_TOKEN_ON_DST_CHAIN = 1001;
  ERROR_NO_TOKEN_ON_SRC_CHAIN = 1002;
  ERROR_INIT_WITHDRAW_FAILED = 1003;
  ERROR_CODE_NO_ENOUGH_TOKEN_ON_DST_CHAIN = 1004;
}

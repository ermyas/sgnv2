syntax = "proto3";
package sgn.pegbridge.v1;

option go_package = "github.com/celer-network/sgn-v2/x/pegbridge/types";

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "sgn/common/v1/common.proto";
import "sgn/pegbridge/v1/pegbridge.proto";

// Query defines the gRPC querier service.
service Query {
  // Params queries params of the pegbridge module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/sgn/pegbridge/v1/params";
  }

  // Config queries config of the pegbridge module.
  rpc Config(QueryConfigRequest) returns (PegConfig) {
    option (google.api.http).get = "/sgn/pegbridge/v1/config";
  }

  // OrigPeggedPairs queries the original-pegged pairs, following:
  // 1. If orig specified:
  //   - 1.1. If pegged chain ID specified, returns single pair if found;
  //   - 1.2. Else, returns all pairs from orig;
  // 2. If orig not specified but pegged specified, returns a single pair if found;
  // 3. Else, returns all pairs.
  rpc OrigPeggedPairs(QueryOrigPeggedPairsRequest) returns (QueryOrigPeggedPairsResponse) {
    option (google.api.http).get = "/sgn/pegbridge/v1/orig_pegged_pairs";
  }

  // EstimatedAmountFees queries the estimated received amount and charged fees for a mint / withdraw request.
  rpc EstimatedAmountFees(QueryEstimatedAmountFeesRequest) returns (QueryEstimatedAmountFeesResponse) {
    option (google.api.http).get = "/sgn/pegbridge/v1/estimated_amount_fees";
  }

  // DepositInfo queries the deposit info
  rpc DepositInfo(QueryDepositInfoRequest) returns (QueryDepositInfoResponse) {
    option (google.api.http).get = "/sgn/pegbridge/v1/deposit_info/{deposit_id}";
  }

  // WithdrawInfo queries the withdraw info
  rpc WithdrawInfo(QueryWithdrawInfoRequest) returns (QueryWithdrawInfoResponse) {
    option (google.api.http).get = "/sgn/pegbridge/v1/withdraw_info/{withdraw_id}";
  }

  // MintInfo queries the mint info
  rpc MintInfo(QueryMintInfoRequest) returns (QueryMintInfoResponse) {
    option (google.api.http).get = "/sgn/pegbridge/v1/mint_info/{mint_id}";
  }

  // BurnInfo queries the burn info
  rpc BurnInfo(QueryBurnInfoRequest) returns (QueryBurnInfoResponse) {
    option (google.api.http).get = "/sgn/pegbridge/v1/burn_info/{burn_id}";
  }

  // FeeClaimInfo queries the fee claim info
  rpc FeeClaimInfo(QueryFeeClaimInfoRequest) returns (QueryFeeClaimInfoResponse) {
    option (google.api.http).get = "/sgn/pegbridge/v1/fee_claim_info";
  }

  // SupplyInfo queries the total supply and supply cap
  rpc SupplyInfo(QuerySupplyInfoRequest) returns (QuerySupplyInfoResponse) {
    option (google.api.http).get = "/sgn/pegbridge/v1/supply_info";
  }

  // RefundClaimInfo queries the corresponding withdrawId of certain depositId
  rpc RefundClaimInfo(QueryRefundClaimInfoRequest) returns (QueryRefundClaimInfoResponse) {
    option (google.api.http).get = "/sgn/pegbridge/v1/refund_claim_info";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryConfigRequest {}

// QueryOrigPeggedPairsRequest is the request type for the Query/OrigPeggedPairs RPC method.
message QueryOrigPeggedPairsRequest {
  sgn.common.v1.ContractInfo orig = 1;
  sgn.common.v1.ContractInfo pegged = 2;
}

// QueryOrigPeggedPairsResponse is the response type for the Query/OrigPeggedPairs RPC method.
message QueryOrigPeggedPairsResponse {
  repeated OrigPeggedPair pairs = 1 [(gogoproto.nullable) = false];
}

// QueryEstimatedAmountFeesRequest is the request type for the Query/EstimatedAmountFees RPC method.
message QueryEstimatedAmountFeesRequest {
  OrigPeggedPair pair = 1 [(gogoproto.nullable) = false];
  string request_amount = 2;
  bool mint = 3;
}

// QueryEstimatedAmountFeesResponse is the response type for the Query/EstimatedAmountFees RPC method.
message QueryEstimatedAmountFeesResponse {
  string receive_amount = 1;
  string base_fee = 2;
  string percentage_fee = 3;
}

// QueryDepositInfoRequest is the request type for the Query/DepositInfo RPC method.
message QueryDepositInfoRequest {
  string deposit_id = 1;
}

// QueryDepositInfoResponse is the response type for the Query/DepositInfo RPC method.
message QueryDepositInfoResponse {
  DepositInfo deposit_info = 1 [(gogoproto.nullable) = false];
}

// QueryWithdrawInfoRequest is the request type for the Query/WithdrawInfo RPC method.
message QueryWithdrawInfoRequest {
  string withdraw_id = 1;
}

// QueryWithdrawInfoResponse is the response type for the Query/WithdrawInfo RPC method.
message QueryWithdrawInfoResponse {
  WithdrawInfo withdraw_info = 1 [(gogoproto.nullable) = false];
}

// QueryMintInfoRequest is the request type for the Query/MintInfo RPC method.
message QueryMintInfoRequest {
  string mint_id = 1;
}

// QueryMintInfoResponse is the response type for the Query/MintInfo RPC method.
message QueryMintInfoResponse {
  MintInfo mint_info = 1 [(gogoproto.nullable) = false];
}

// QueryBurnInfoRequest is the request type for the Query/BurnInfo RPC method.
message QueryBurnInfoRequest {
  string burn_id = 1;
}

// QueryBurnInfoResponse is the response type for the Query/BurnInfo RPC method.
message QueryBurnInfoResponse {
  BurnInfo burn_info = 1 [(gogoproto.nullable) = false];
}

// QueryFeeClaimInfoRequest is the request type for the Query/FeeClaimInfo RPC method.
message QueryFeeClaimInfoRequest {
  string address = 1;
  uint64 nonce = 2;
}

// QueryFeeClaimInfoResponse is the response type for the Query/FeeClaimInfo RPC method.
message QueryFeeClaimInfoResponse {
  FeeClaimInfo fee_claim_info = 1 [(gogoproto.nullable) = false];
}

// QuerySupplyInfoRequest is the request type for the Query/SupplyInfo RPC method.
message QuerySupplyInfoRequest {
  uint64 pegged_chain_id = 1;
  string pegged_address = 2;
}

// QuerySupplyInfoResponse is the response type for the Query/SupplyInfo RPC method.
message QuerySupplyInfoResponse {
  string total = 1;
  string cap = 2;
}

// QueryRefundClaimInfoRequest is the request type for the Query/RefundClaimInfo RPC method.
message QueryRefundClaimInfoRequest {
  string deposit_id = 1;
}

// QueryRefundClaimInfoResponse is the response type for the Query/RefundClaimInfo RPC method.
message QueryRefundClaimInfoResponse {
  string withdraw_id = 1;
}
syntax = "proto3";
package sgn.sync.v1;

option go_package = "github.com/celer-network/sgn-v2/x/sync/types";

import "gogoproto/gogo.proto";

enum DataType {
  Invalid = 0;
  ValidatorSgnAddr = 1;
  ValidatorParams = 2;  // signer, pubkey, commission
  ValidatorStates = 3;  // status, token, share
  DelegatorShares = 4;
  CbrOnchainEvent = 5; // syncer saw a new onchain event
  CbrUpdateCbrPrice = 6; // use PendingUpdate.data as serialized CbrPrice msg
  PegbrOnChainEvent = 7;
  MsgbrOnChainEvent = 8;
}

enum VoteOption {
  Empty = 0;
  Yes = 1;
  Abstain = 2;
  No = 3;
}

message Vote {
  string voter = 1;
  VoteOption option = 2;
}

message PendingUpdate {
  uint64 id = 1;
  DataType type = 2;
  bytes data = 3;
  uint64 chain_id = 4;
  uint64 chain_block = 5;
  string proposer = 6;
  repeated Vote votes = 7;
  uint64 propose_ts = 8;
  uint64 closing_ts = 9;
}

message Params {
  uint64 voting_period = 1;
  bytes tally_threshold = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "threshold,omitempty"
  ];
}
